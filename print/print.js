
function DP() {
if (window.print)
{
//var Div1 = document.getElementById("ctl00_ContentPlaceHolder1_labPageTitle").innerHTML;
    var Div2 = document.getElementById("Panel1").innerHTML;
// *****************************************************
// Div1、Div2即為你在列印的區域
// 這裡根據你要列印的哪些內容，從原顯示頁面中用
// <div id=Div1>Div1....</div><div id=Div2>Div2...</div>
// 等標示出來,要列印多少項目就標示多少
// *****************************************************
    var css = '<style type="text/css" media=all>' +
'p { line-height: 120%}' +
'.ftitle { line-height: 120%; font-size: 18px; color: #000000}' +
'td { font-size: 10px; color: #000000}' +
'</style>' ;
// *****************************************************
// 定義列印用的CSS，實現你想列印出什麼樣的格式全看你自己
// 了，但要注意：如果此處有什麼同網頁中不一致的，可能列印
// 出來的頁面同網頁格式、字體可能會有所不同
// *****************************************************

var body ='<table width="640" border="0" cellspacing="0" cellpadding="4">' +
' <tr> ' +
' <td class="fbody"> ' +
' <div align="center" class=ftitle></div>' + Div2 +
' </td>' +
' </tr>' +
'</table>';
// ******************************************************
// 在此處重新設定的列印格式，根據你的列印要求，將原顯示的
// 網頁的DIV內容重新群組合，可以根據你原來的表格內容，去掉
// 不要列印的，你也可以能下面定義的noprint忽略掉你不想打
// 印的東西，只呼叫你要列印的內容，但這樣被忽略掉的地方將
// 列印出空，不是很美觀。表格寬度要同列印的紙張寬度匹配。
// ******************************************************

document.body.innerHTML = '' + css + body + '';
// ******************************************************
// 重設document.body，列印文檔準備就緒
// ******************************************************

window.print();
//window.history.go(-1);
// ******************************************************
// 呼叫列印命令，列印當前窗口內容。當你列印時其實是一張新
// 的網頁了，但網頁檔案還是原先的。緊接著呼叫
// window.history.go(0)，再回到列印前的頁面，效果相當不差
// ******************************************************
}
}
